name: Find All Tools

on:
  workflow_call:
    outputs:
      matrix:
        description: 'Matrix of tools to test'
        value: ${{ jobs.find-tools.outputs.matrix }}

permissions:
  contents: read

jobs:
  find-tools:
    name: Find all tools
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: 'polusai/tabular-tools'
          ref: 'main'
      - name: Find tools
        id: set-matrix
        run: |
          # List of directories to ignore
          ignored_dirs="polus-python-template ftl-label .venv"
          # List of tools that are broken for known reasons
          broken_tools="rxiv-download"
          # Reasons:
            # - rxiv-download: The tests intermittently fail because some of them try to download files from the internet but the requests time out.

          # Initialize variables
          ignored_dirs="$ignored_dirs $broken_tools"
          ignored_dirs=$(echo $ignored_dirs | xargs)
          tool_dirs=""

          # Get all directories in the current directory
          dirs=$(find $(pwd) -type d)

          # Get all directories that have a "pyproject.toml" file
          for dir in $dirs; do
            # Ignore the current directory
            if [ "$dir" == "$(pwd)" ]; then
              continue
            fi
            # Ignore the directory if it contains any of the substrings in "ignored_dirs"
            for ignored_dir in $ignored_dirs; do
              if [[ "$dir" == *"$ignored_dir"* ]]; then
                continue 2
              fi
            done
            # If the directory contains a "pyproject.toml" file, then add it to the list of tools
            if [ -f "$dir/pyproject.toml" ]; then
              tool_dirs="$tool_dirs $dir"
            fi
          done
          # Remove leading and trailing spaces
          tool_dirs=$(echo $tool_dirs | xargs)

          # Convert the list of tools to a JSON string
          tools_json="{\"include\": ["
          for tool in $tool_dirs; do
            tool_name=$(basename $tool)
            json_line="{\"tool_dir\": \"$tool\", \"tool_name\": \"$tool_name\"},"
            if [ ! "$tools_json" == *"json_line"* ]; then
              tools_json="$tools_json$json_line"
            fi
          done
          # Remove the trailing comma
          if [ "$tools_json" == *"," ]; then
            tools_json="${tools_json%?}"
          fi
          tools_json="$tools_json]}"

          echo "tools_json: $tools_json"

          # Set the output
          echo "matrix=$( echo "$tools_json" )" >> $GITHUB_OUTPUT
